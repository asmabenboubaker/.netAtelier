// <auto-generated />
using System;
using AM.UI.Console;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AM.Infrastructure.Migrations
{
    [DbContext(typeof(AmContext))]
    [Migration("20230418114902_uploadImage")]
    partial class uploadImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AM.applicationCore.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("EffectiveArrival")
                        .HasColumnType("date");

                    b.Property<int>("EstimatedDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("FightDate")
                        .HasColumnType("date");

                    b.Property<string>("Pilote")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int?>("PlaneId")
                        .HasColumnType("int");

                    b.HasKey("FlightId");

                    b.HasIndex("PlaneId");

                    b.ToTable("vols ", (string)null);
                });

            modelBuilder.Entity("AM.applicationCore.Passenger", b =>
                {
                    b.Property<int>("PassportNumber")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassportNumber"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("EmailAdress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<int>("TelNumber")
                        .HasColumnType("int");

                    b.HasKey("PassportNumber");

                    b.ToTable("Passenger", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("AM.applicationCore.Plane", b =>
                {
                    b.Property<int>("PlaneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlaneId"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("PlaneCapacity");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("date");

                    b.Property<int>("Planetype")
                        .HasColumnType("int");

                    b.HasKey("PlaneId");

                    b.ToTable("myplaness", (string)null);
                });

            modelBuilder.Entity("AM.applicationCore.Reservation", b =>
                {
                    b.Property<int>("SeatFK")
                        .HasColumnType("int");

                    b.Property<int>("PassengerFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateReservation")
                        .HasColumnType("date");

                    b.Property<int>("SeatId")
                        .HasColumnType("int");

                    b.Property<int>("passengerPassportNumber")
                        .HasColumnType("int");

                    b.HasKey("SeatFK", "PassengerFK");

                    b.HasIndex("SeatId");

                    b.HasIndex("passengerPassportNumber");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("AM.applicationCore.Seat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("PlaneFKPlaneId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<int>("SectionFK")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("SeatId");

                    b.HasIndex("PlaneFKPlaneId");

                    b.HasIndex("SectionFK");

                    b.ToTable("Seat");
                });

            modelBuilder.Entity("AM.applicationCore.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("SectionId");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("AM.applicationCore.Ticket", b =>
                {
                    b.Property<int>("FlightFK")
                        .HasColumnType("int");

                    b.Property<int>("PassengerFK")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasPrecision(3, 2)
                        .HasColumnType("float(3)");

                    b.Property<string>("Siege")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<bool>("VIP")
                        .HasColumnType("bit");

                    b.HasKey("FlightFK", "PassengerFK");

                    b.HasIndex("PassengerFK");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("AM.applicationCore.Staff", b =>
                {
                    b.HasBaseType("AM.applicationCore.Passenger");

                    b.Property<DateTime>("EmployementDate")
                        .HasColumnType("date");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("function")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("AM.applicationCore.Traveller", b =>
                {
                    b.HasBaseType("AM.applicationCore.Passenger");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<string>("healthInformation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.ToTable("Travller", (string)null);
                });

            modelBuilder.Entity("AM.applicationCore.Flight", b =>
                {
                    b.HasOne("AM.applicationCore.Plane", "Planee")
                        .WithMany("Flights")
                        .HasForeignKey("PlaneId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Planee");
                });

            modelBuilder.Entity("AM.applicationCore.Passenger", b =>
                {
                    b.OwnsOne("AM.applicationCore.FullName", "fullname", b1 =>
                        {
                            b1.Property<int>("PassengerPassportNumber")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("varchar")
                                .HasColumnName("PassFirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("varchar")
                                .HasColumnName("PassLastName");

                            b1.HasKey("PassengerPassportNumber");

                            b1.ToTable("Passenger");

                            b1.WithOwner()
                                .HasForeignKey("PassengerPassportNumber");
                        });

                    b.Navigation("fullname");
                });

            modelBuilder.Entity("AM.applicationCore.Reservation", b =>
                {
                    b.HasOne("AM.applicationCore.Seat", "seat")
                        .WithMany("reservation")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AM.applicationCore.Passenger", "passenger")
                        .WithMany("reservation")
                        .HasForeignKey("passengerPassportNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("passenger");

                    b.Navigation("seat");
                });

            modelBuilder.Entity("AM.applicationCore.Seat", b =>
                {
                    b.HasOne("AM.applicationCore.Plane", "PlaneFK")
                        .WithMany()
                        .HasForeignKey("PlaneFKPlaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AM.applicationCore.Section", "Section")
                        .WithMany("Seats")
                        .HasForeignKey("SectionFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlaneFK");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("AM.applicationCore.Ticket", b =>
                {
                    b.HasOne("AM.applicationCore.Flight", "flight")
                        .WithMany("tickets")
                        .HasForeignKey("FlightFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AM.applicationCore.Passenger", "passenger")
                        .WithMany("tickets")
                        .HasForeignKey("PassengerFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("flight");

                    b.Navigation("passenger");
                });

            modelBuilder.Entity("AM.applicationCore.Staff", b =>
                {
                    b.HasOne("AM.applicationCore.Passenger", null)
                        .WithOne()
                        .HasForeignKey("AM.applicationCore.Staff", "PassportNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AM.applicationCore.Traveller", b =>
                {
                    b.HasOne("AM.applicationCore.Passenger", null)
                        .WithOne()
                        .HasForeignKey("AM.applicationCore.Traveller", "PassportNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AM.applicationCore.Flight", b =>
                {
                    b.Navigation("tickets");
                });

            modelBuilder.Entity("AM.applicationCore.Passenger", b =>
                {
                    b.Navigation("reservation");

                    b.Navigation("tickets");
                });

            modelBuilder.Entity("AM.applicationCore.Plane", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("AM.applicationCore.Seat", b =>
                {
                    b.Navigation("reservation");
                });

            modelBuilder.Entity("AM.applicationCore.Section", b =>
                {
                    b.Navigation("Seats");
                });
#pragma warning restore 612, 618
        }
    }
}
